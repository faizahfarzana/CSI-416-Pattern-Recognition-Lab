Read here: https://www.machinelearningplus.com/nlp/cosine-similarity/

Code: 
    def cosine_distance(self, vocab1, vocab2):
        return np.dot(self.unitvec(self.vector(vocab1)), self.unitvec(self.vector(vocab2)))
          
    In python, self is used as instance of the class. We can access the attributes and methods using self.
        
Example:
    Say we have vector A and B. Dot product is:
        A . B = |A| |B| cos (θ)
        => cos (θ) = (A . B) / (|A| . |B|)
        => cos (θ) = (A/|A|) . (B/|B|)
        => cos (θ) = unit vector of A * unit vector of B = similarity

        Value cos (θ) of ranges from -1 to 1
        -1 = non-similar
         0 = perpendicular
         1 = totally similar
      
   In this paper, we find nearest neighbors using similarity measure:
              NearestNeighbor_k (v)= max [sim(v, vec(s))] for s belonging to {A, C, G, T} ^ k
